# .github/workflows/convert-to-pdf.yml

name: Docs to PDF
# This workflow is triggered on pushes to the repository.
on:
  push:
    branches:
      - main

jobs:
  converttopdf:
    name: Build PDF
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: baileyjm02/markdown-to-pdf@v1
        with:
          input_dir: docs
          output_dir: pdfs
          images_dir: docs/images
          # for example <img src="./images/file-name.png">
          image_import: ./images
          # Default is true, can set to false to only get PDF files
          build_html: false
      - uses: actions/upload-artifact@v3
        with:
          name: docs
          path: pdfs

name: Docs to PDF
# This workflow is triggered on pushes to the repository.
on:
  push:
    branches:
      - main

jobs:
  converttopdf:
    name: Build PDF
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Convert Markdown to PDF
        uses: baileyjm02/markdown-to-pdf@v1
        with:
          input_dir: docs
          output_dir: pdfs
          images_dir: docs/images
          # for example <img src="./images/file-name.png">
          image_import: ./images
          # Default is true, can set to false to only get PDF files
          build_html: false

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: docs
          path: pdfs

  createrelease:
    name: Create Release and Attach Artifact
    needs: converttopdf
    runs-on: ubuntu-latest
    steps:
      - name: Generate Random Tag Name
        id: tag
        run: echo "tag=v$(date +%s)" >> $GITHUB_ENV

      - name: Create Release
        id: release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ env.tag }}
          release_name: "Release ${{ env.tag }}"
          body: "Automated release generated by GitHub Actions."
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Download Artifact
        uses: actions/download-artifact@v3
        with:
          name: docs
          path: downloaded_docs

      - name: List Downloaded Files
        run: ls -R downloaded_docs

      - name: Upload Artifact to Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.release.outputs.upload_url }}
          asset_path: downloaded_docs
          asset_name: docs.zip
          asset_content_type: application/zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

